buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur', version: '1.1.0'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: 'maven-publish'

version = "1.19.2-1.0"
def env = System.getenv()
if (env.GITHUB_RUN_NUMBER) {
    version = version + "+" + "${env.GITHUB_RUN_NUMBER}"
}

group = 'uk.co.hexeption'
archivesBaseName = 'minis'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println(' Java: ' + System.getProperty('java.version') +
        ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ')' +
        ' Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.19.2'
    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            arg "-mixin.config=minis.mixins.json"

            property 'forge.logging.console.level', 'debug'

            mods {
                minis {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            arg "-mixin.config=minis.mixins.json"

            property 'forge.logging.console.level', 'debug'

            mods {
                minis {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'minis', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                minis {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.1'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "minis",
                //"Specification-Vendor": "minis authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                //"Implementation-Vendor": "minis authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "minis.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

mixin {
    add sourceSets.main, "minis.refmap.json"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

artifacts {
    archives jar
    archives sourcesJar
    archives deobfJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact deobfJar
        }
    }

    repositories {
        if (project.hasProperty("mavenPass")) {
            maven {
                url = "https://nexus.hexeption.dev/repository/hex-mods/"
                credentials {
                    username = "admin"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }
}


curseforge {
    if (System.getenv("CURSE_API_KEY")) {
        apiKey = System.getenv("CURSE_API_KEY")
    }
    project {
        id = '472352'
        changelog = 'A changelog can be found at https://github.com/Hexeption/Minis'
        releaseType = 'release'
        addGameVersion '1.19'
        addGameVersion '1.19.2'

        mainArtifact(jar) {
            displayName = "Minis v$version"
        }
    }
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {
    if (System.getenv("MODRINTH_API_KEY")) {
        token = System.getenv("MODRINTH_API_KEY")
    }
    projectId = 'AagJT5ms'
    versionName = "Minis v$version"
    changelog = 'A changelog can be found at https://github.com/Hexeption/Minis'
    versionNumber = "$version"
    uploadFile = jar
    addGameVersion("1.19.2")
    addLoader('forge')
}
